<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TopDown.TopFramework.Common</name>
    </assembly>
    <members>
        <member name="T:TopDown.TopFramework.Common.Exceptions.IntegrityException">
            <summary>
            Exceção específica para erros de integridade no banco de dados.
            </summary>
        </member>
        <member name="M:TopDown.TopFramework.Common.Exceptions.IntegrityException.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:TopDown.TopFramework.Common.Exceptions.IntegrityException.#ctor(System.String)">
            <summary>
            Construtor que inicia a mensagem de erro da exceção.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:TopDown.TopFramework.Common.Exceptions.IntegrityException.#ctor(System.String,System.Exception)">
            <summary>
            Construtor que inicia a mensagem de erro da exceção e a exceção inicial.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:TopDown.TopFramework.Common.Extensions.TypeExtensions">
            <summary>
            Classe contendo extension methods para objetos Type.
            </summary>
        </member>
        <member name="M:TopDown.TopFramework.Common.Extensions.TypeExtensions.GetValueTypeIfNullable(System.Type)">
            <summary>
            Obtém o tipo real caso o tipo original for Nullable.
            </summary>
        </member>
        <member name="M:TopDown.TopFramework.Common.Extensions.TypeExtensions.IsNullable(System.Type)">
            <summary>
            Verifica se um tipo é Nullable.
            </summary>
        </member>
        <member name="T:TopDown.TopFramework.Common.Extensions.ExtensionMethods">
            <summary>
            Classe contendo extension methods para objetos IQueryable.
            </summary>
        </member>
        <member name="M:TopDown.TopFramework.Common.Extensions.ExtensionMethods.OrderBy``1(System.Linq.IQueryable{``0},System.String,System.Boolean)">
            <summary>
            Ordena um IQueryable conforme o parâmetro string.
            </summary>
            <param name="source">Objeto IQueryable que será ordenado.</param>
            <param name="orderByProperty">Propriedade utilizada para ordenar.</param>
            <param name="descending">Indica se a ordenação será decrescente.</param>
            <example>
            Ordenando pela propriedade "Empresa.Nome" em ordem ascendente:
            <code>clientes.OrderBy("Empresa.Nome", false);</code>
            </example>
        </member>
        <member name="T:TopDown.TopFramework.Common.CommonContainer">
            <summary>
            Container IoC do framework.
            </summary>
        </member>
        <member name="M:TopDown.TopFramework.Common.CommonContainer.Resolve``1">
            <summary>
            Resolve a dependência de <typeparamref name="T"/> e instancia um objeto.
            </summary>
        </member>
        <member name="M:TopDown.TopFramework.Common.CommonContainer.Resolve``1(System.Object)">
            <summary>
            Resolve a dependência de <typeparamref name="T"/> e instancia um objeto usando o parâmetro <param name="arg" />.
            </summary>
        </member>
        <member name="T:TopDown.TopFramework.Common.Exceptions.AuthorizationException">
            <summary>
            Exceção específica para erros de integridade no banco de dados.
            </summary>
        </member>
        <member name="M:TopDown.TopFramework.Common.Exceptions.AuthorizationException.#ctor">
            <summary>
            Construtor padrão.
            </summary>
        </member>
        <member name="M:TopDown.TopFramework.Common.Exceptions.AuthorizationException.#ctor(System.String)">
            <summary>
            Construtor que inicia a mensagem de erro da exceção.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:TopDown.TopFramework.Common.Exceptions.AuthorizationException.#ctor(System.String,System.Exception)">
            <summary>
            Construtor que inicia a mensagem de erro da exceção e a exceção inicial.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:TopDown.TopFramework.Common.Extensions.DateTimeExtensions">
            <summary>
            Classe contendo extension methods para objetos DateTime.
            </summary>
        </member>
        <member name="M:TopDown.TopFramework.Common.Extensions.DateTimeExtensions.ToStringDiff(System.DateTime,System.DateTime,System.String)">
            <summary>
            Exibe a diferença em dias entre duas datas conforme o formato especificado.
            </summary>
            <param name="date">Data final.</param>
            <param name="originalDate">Data inicial.</param>
            <param name="format">Formato da exibição.</param>
            <returns>Retorna um objeto string contendo a diferença formatada.</returns>
        </member>
        <member name="T:TopDown.TopFramework.Common.Extensions.ExpressionExtensions">
            <summary>
            Classe contendo extension methods para objetos Expression.
            </summary>
        </member>
        <member name="M:TopDown.TopFramework.Common.Extensions.ExpressionExtensions.True``1">
            <summary>
            Constrói um expressão sempre verdadeira.
            </summary>
        </member>
        <member name="M:TopDown.TopFramework.Common.Extensions.ExpressionExtensions.And``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Concatena duas expressões lambda que retornam bool.
            </summary>
            <returns>Retorna uma expressão lambda com o retorno sendo o AND lógico das duas expressões.</returns>
        </member>
        <member name="T:TopDown.TopFramework.Common.Extensions.StringExtensions">
            <summary>
            Classe contendo extension methods para objetos String.
            </summary>
        </member>
        <member name="M:TopDown.TopFramework.Common.Extensions.StringExtensions.ToType(System.String,System.Type)">
            <summary>
            Converte um objeto string para o tipo especificado.
            </summary>
            <param name="origin">Objeto string contendo o valor a ser convertido.</param>
            <param name="dest">Tipo desejado para a conversão.</param>
        </member>
        <member name="M:TopDown.TopFramework.Common.Extensions.StringExtensions.ToExpression(System.String,System.Linq.Expressions.ParameterExpression)">
            <summary>
            Converte um objeto String para um objeto MemberExpression.
            </summary>
            <param name="origin">Objeto string original</param>
            <param name="p">Parâmetro de entrada do objeto Expression.</param>
            <returns>Uma expressão referente ao membro </returns>
        </member>
        <member name="T:TopDown.TopFramework.Common.Extensions.IEnumerableExtensions">
            <summary>
            Classe contendo extension methods para objetos IEnumerable.
            </summary>
        </member>
        <member name="M:TopDown.TopFramework.Common.Extensions.IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Executa uma ação em cada elemento do IQueryable.
            </summary>
            <param name="source">Objeto IEnumerable que será ordenado.</param>
            <param name="action">Ação a ser executada.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TopDown.TopFramework.Common.Extensions.IEnumerableExtensions.SelectWithPrevious``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``1})" -->
    </members>
</doc>
